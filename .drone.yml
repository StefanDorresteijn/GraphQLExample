pipeline:
  notify_start:
      image: plugins/slack
      webhook: https://hooks.slack.com/services/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
      channel: esports-core-dev
      username: drone
      template: >
        Build #{{build.number}} starting!

  docker:
    image: plugins/docker
    repo: stefandorresteijn/graphqlexample
    tags: latest
    secrets: [ docker_username, docker_password, DB_URL ]
    commands:
      - echo "DB_URL=$DB_URL" > .env
      - /usr/local/bin/dockerd -g /var/lib/docker
      - /usr/local/bin/docker build --rm=true -f Dockerfile -t stefandorresteijn/graphqlexample . --pull=true
      - /usr/local/bin/docker push stefandorresteijn/graphqlexample:latest
      - /usr/local/bin/docker rmi stefandorresteijn/graphqlexample
      - /usr/local/bin/docker system prune -f

  notify_docker_built:
      image: plugins/slack
      webhook: https://hooks.slack.com/services/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
      channel: esports-core-dev
      username: drone
      template: >
        Build #{{build.number}} has built and pushed docker image!

  ecs:
    image: peloton/drone-ecs
    service: service-test
    cluster: staging-cluster
    region: eu-central-1
    family: ecs-test-deploy
    docker_image: stefandorresteijn/graphqlexample
    tag: latest
    port_mappings:
      - 80 8080
    memory: 128
    secrets: [ ecs_access_key, ecs_secret_key ]
    deployment_configuration: 50 200
    desired_count: 1
    cpu: 102

  notify_finished:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: esports-core-dev
    username: drone
    template: >
      {{#success build.status}}
        Build #{{build.number}} succeeded. Good job.
      {{else}}
        Build #{{build.number}} failed. Fix me please.
      {{/success}}